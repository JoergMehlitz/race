// example of how to run message stats collector on realtime SWIM data
// requires
//    script/race config/metrics/swim-msg-stats.conf

universes = [
  {
    name = "swim-msg-stats"

    actors = [
      { //----------------- JMS consumer actor to import date from external JMS brokers
        class = "gov.nasa.race.actors.imports.JMSImportActor"
        name = "jmsImporter"
        broker-uri = "tcp://localhost:61616"
        user = "??swim.user"
        pw = "??swim.pw"
        write-to = "data"
        //jms-topic = "nasa.topic01.asdex"
        //jms-topic = "nasa.topic02.apds
        //jms-topic = "nasa.topic03.itws"
        //jms-topic = "nasa.topic04.tfmdata"
        jms-topic = "nasa.topic05.sfdps"
      },

      { //----------------- metrics actor 
        name = "msgStats"
        class = "gov.nasa.race.actors.metrics.XMLMessageStats"
        read-from = "data"
        write-to = "stats"
        tag-level = 1 //level at which this actor collects tags
        report-interval = 15
        report-frequency = 5
        pathname = "tmp/all"
        facility = "all"
      },

     { //----------------- probe actor that prints received messages on the screen
        name = "probe"
        class = "gov.nasa.race.actors.viewers.ProbeActor"
        read-from = "data"  // the message bus channels this actor subscribes to
      },

//      { //----------------- probe actor that writes matching messages to disk
//        name = "msgArchiver"
//        class = "gov.nasa.race.actors.exports.ArchiveActor"
//        read-from = "data"  // the message bus channels this actor subscribes to
//        pathname = "tmp/data.xml"
//        append = "false"
//        archive-writer = "gov.nasa.race.data.TextArchiveWriter"
//      }

    ]

    include "../include/logging-slf4j"
  }
]