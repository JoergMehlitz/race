// example of a dispatcher actor that spawns worker childs and dispatches incoming
// messages to them in order to avoid mailbox saturation

universes = [
  {
    name = "swim-sfpds-dispatcher"

    actors = [
      { //----------------- JMS consumer actor to import date from external JMS brokers
        class = "gov.nasa.race.actors.imports.JMSImportActor"
        name = "jmsImporter"
        broker-uri = "tcp://localhost:61616"
        user = "??swim.user"
        pw = "??swim.pw"
        write-to = "sfdps"
        jms-topic = "nasa.topic05.sfdps"
      },

      { name = "dispatcher"
        class = ".actors.routers.Dispatcher"
        read-from = "sfdps"
        replication = 5

        worker = {
          name = "nasf2fpos"
          class = "gov.nasa.race.actors.translators.NasFlight2FlightPos"
          write-to = "fpos"
        }
      },

      { //----------------- probe actor that prints received messages on the screen
        name = "probe"
        class = "gov.nasa.race.actors.viewers.ProbeActor"
        read-from = "fpos"
      }
    ]

    include "../include/logging-slf4j"
  }
]